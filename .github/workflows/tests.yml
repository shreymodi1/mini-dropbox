name: Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  detect_project:
    runs-on: ubuntu-latest
    outputs:
      project_type: ${{ steps.detect.outputs.project_type }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Detect project type
        id: detect
        run: |
          if [ -f "package.json" ]; then
            # Check for specific identifiers in package.json
            if grep -q "next" "package.json"; then
              echo "project_type=nextjs" >> $GITHUB_OUTPUT
            elif grep -q "stripe" "package.json"; then
              echo "project_type=stripe" >> $GITHUB_OUTPUT
            elif grep -q "uber" "package.json"; then
              echo "project_type=uber" >> $GITHUB_OUTPUT
            elif grep -q "langchain" "package.json"; then
              echo "project_type=langchain" >> $GITHUB_OUTPUT
            else
              echo "project_type=node" >> $GITHUB_OUTPUT
            fi
          elif [ -f "requirements.txt" ]; then
            if grep -q "flask" "requirements.txt"; then
              echo "project_type=dropbox" >> $GITHUB_OUTPUT
            else
              echo "project_type=python" >> $GITHUB_OUTPUT
            fi
          else
            echo "project_type=unknown" >> $GITHUB_OUTPUT
          fi

  test:
    needs: detect_project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # For JavaScript/Node.js projects
      - name: Set up Node.js
        if: ${{ needs.detect_project.outputs.project_type == 'nextjs' || needs.detect_project.outputs.project_type == 'stripe' || needs.detect_project.outputs.project_type == 'uber' || needs.detect_project.outputs.project_type == 'langchain' || needs.detect_project.outputs.project_type == 'node' }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install Node.js dependencies
        if: ${{ needs.detect_project.outputs.project_type == 'nextjs' || needs.detect_project.outputs.project_type == 'stripe' || needs.detect_project.outputs.project_type == 'uber' || needs.detect_project.outputs.project_type == 'langchain' || needs.detect_project.outputs.project_type == 'node' }}
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi
      
      # Next.js specific tests
      - name: Run Next.js tests
        if: ${{ needs.detect_project.outputs.project_type == 'nextjs' }}
        run: |
          npm run lint --if-present
          npm run test --if-present
          npm run build --if-present
      
      # Stripe specific tests
      - name: Run Stripe tests
        if: ${{ needs.detect_project.outputs.project_type == 'stripe' }}
        run: |
          npm run lint --if-present
          npm run test --if-present
      
      # Uber specific tests
      - name: Run Uber tests
        if: ${{ needs.detect_project.outputs.project_type == 'uber' }}
        run: |
          npm run lint --if-present
          npm run test --if-present
      
      # LangChain specific tests
      - name: Run LangChain tests
        if: ${{ needs.detect_project.outputs.project_type == 'langchain' }}
        run: |
          npm run lint --if-present
          npm run test --if-present
      
      # For Python projects
      - name: Set up Python
        if: ${{ needs.detect_project.outputs.project_type == 'dropbox' || needs.detect_project.outputs.project_type == 'python' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Python dependencies
        if: ${{ needs.detect_project.outputs.project_type == 'dropbox' || needs.detect_project.outputs.project_type == 'python' }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest flake8
          
      - name: Lint with flake8
        if: ${{ needs.detect_project.outputs.project_type == 'dropbox' || needs.detect_project.outputs.project_type == 'python' }}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Test with pytest
        if: ${{ needs.detect_project.outputs.project_type == 'dropbox' || needs.detect_project.outputs.project_type == 'python' }}
        run: |
          pytest --if-exists tests/
          # Alternative way to run tests if tests directory doesn't exist
          if [ ! -d "tests" ]; then
            python -m pytest
          fi 
